function obj = ssd_autonn_custom_fn(block, inputs, params)
% SSD_AUTONN_CUSTOM_FN autonn custom layer converter

  switch class(block)
    case 'dagnn.Normalize'
      obj = Layer.create(@vl_nnscalenorm, {inputs{1}, params{1}}) ;
    case 'dagnn.Permute'
      obj = Layer.create(@permute, {inputs{1}, block.order}) ;
    case 'dagnn.Flatten'
      obj = Layer.create(@vl_nnflatten, {inputs{1}, block.axis}) ;
    case 'dagnn.Reshape'
      obj = Layer.create(@vl_nnreshape, {inputs{1}, block.shape}) ;
    case 'dagnn.SoftMaxTranspose'
      obj = Layer.create(@vl_nnsoftmaxt, {inputs{1}, 'dim', block.dim}) ;
    case 'dagnn.PriorBox'
      obj = Layer.create(@vl_nnpriorbox, {inputs{1}, inputs{2}, ...
                                  'aspectRatios', block.aspectRatios, ...
                                  'pixelStep', block.pixelStep, ...
                                  'variance', block.variance, ...
                                  'minSize', block.minSize, ...
                                  'maxSize', block.maxSize, ...
                                  'offset', block.offset, ...
                                  'flip', block.flip, ...
                                  'clip', block.clip}, ...
                                  'numInputDer', 0) ;
    case 'dagnn.MultiboxDetector'
      numClasses = double(block.numClasses) ; % fixes weird bug
      obj = Layer.create(@vl_nnmultiboxdetector, ...
                                 {inputs{1}, inputs{2}, inputs{3}...
                                 'numClasses', numClasses, ... 
                                 'nmsThresh', block.nmsThresh}, ...
                                 'numInputDer', 0) ;
  end
